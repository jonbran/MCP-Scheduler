version: '3.8'

services:
  # MariaDB database service
  mariadb:
    image: mariadb:11.4
    container_name: mcp-scheduler-mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-McpScheduler123!}
      MYSQL_DATABASE: McpSchedulerDb
      MYSQL_USER: mcpuser
      MYSQL_PASSWORD: ${DB_PASSWORD:-McpScheduler123!}
    ports:
      - "3307:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./tables_mysql.sql:/docker-entrypoint-initdb.d/02-quartz-schema.sql
    networks:
      - mcp-scheduler-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  # MCP Scheduler API service
  mcp-scheduler-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-scheduler-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Database__Provider=mysql
      - ConnectionStrings__DefaultConnection=Server=mariadb;Port=3306;Database=McpSchedulerDb;User=mcpuser;Password=${DB_PASSWORD:-McpScheduler123!};
      - DB_PASSWORD=${DB_PASSWORD:-McpScheduler123!}
      - Jwt__Key=${JWT_KEY:-your-super-secret-jwt-key-that-is-at-least-256-bits-long}
      - Jwt__Issuer=McpScheduler
      - Jwt__Audience=McpScheduler
    ports:
      - "8080:8080"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - mcp-scheduler-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mariadb_data:
    driver: local

networks:
  mcp-scheduler-network:
    driver: bridge
